# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = vifm$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_bin_SCRIPTS) \
	$(dist_bashcompl_DATA) $(dist_desktopapp_DATA) \
	$(dist_desktoppix_DATA) $(dist_docs_DATA) $(dist_pkgdata_DATA) \
	$(dist_vim_autoload_vifm__DATA) $(dist_vim_colors__DATA) \
	$(dist_vim_doc__DATA) $(dist_vim_ftdetect__DATA) \
	$(dist_vim_ftplugin__DATA) $(dist_vim_plugin__DATA) \
	$(dist_vim_syntax__DATA) $(dist_vimdoc_doc__DATA) \
	$(dist_zshcompl_DATA) $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/build-aux/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/build-aux/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(bashcompldir)" \
	"$(DESTDIR)$(desktopappdir)" "$(DESTDIR)$(desktoppixdir)" \
	"$(DESTDIR)$(docsdir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(vim_autoload_vifm_dir)" \
	"$(DESTDIR)$(vim_colors_dir)" "$(DESTDIR)$(vim_doc_dir)" \
	"$(DESTDIR)$(vim_ftdetect_dir)" \
	"$(DESTDIR)$(vim_ftplugin_dir)" "$(DESTDIR)$(vim_plugin_dir)" \
	"$(DESTDIR)$(vim_syntax_dir)" "$(DESTDIR)$(vimdoc_doc_dir)" \
	"$(DESTDIR)$(zshcompldir)" "$(DESTDIR)$(pkgdatadir)" \
	"$(DESTDIR)$(vim_doc_dir)" "$(DESTDIR)$(vimdoc_doc_dir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_vifm_OBJECTS = cfg/config.$(OBJEXT) cfg/info.$(OBJEXT) \
	compat/curses.$(OBJEXT) compat/dtype.$(OBJEXT) \
	compat/getopt.$(OBJEXT) compat/getopt1.$(OBJEXT) \
	compat/mntent.$(OBJEXT) compat/os.$(OBJEXT) \
	compat/pthread.$(OBJEXT) compat/reallocarray.$(OBJEXT) \
	engine/abbrevs.$(OBJEXT) engine/autocmds.$(OBJEXT) \
	engine/cmds.$(OBJEXT) engine/completion.$(OBJEXT) \
	engine/functions.$(OBJEXT) engine/keys.$(OBJEXT) \
	engine/mode.$(OBJEXT) engine/options.$(OBJEXT) \
	engine/parsing.$(OBJEXT) engine/text_buffer.$(OBJEXT) \
	engine/var.$(OBJEXT) engine/variables.$(OBJEXT) \
	int/desktop.$(OBJEXT) int/file_magic.$(OBJEXT) \
	int/fuse.$(OBJEXT) int/path_env.$(OBJEXT) \
	int/term_title.$(OBJEXT) int/vim.$(OBJEXT) io/ioe.$(OBJEXT) \
	io/ioeta.$(OBJEXT) io/iop.$(OBJEXT) io/ior.$(OBJEXT) \
	io/private/ioc.$(OBJEXT) io/private/ioe.$(OBJEXT) \
	io/private/ioeta.$(OBJEXT) io/private/ionotif.$(OBJEXT) \
	io/private/traverser.$(OBJEXT) menus/apropos_menu.$(OBJEXT) \
	menus/bmarks_menu.$(OBJEXT) menus/cabbrevs_menu.$(OBJEXT) \
	menus/colorscheme_menu.$(OBJEXT) menus/commands_menu.$(OBJEXT) \
	menus/dirhistory_menu.$(OBJEXT) menus/dirstack_menu.$(OBJEXT) \
	menus/filetypes_menu.$(OBJEXT) menus/find_menu.$(OBJEXT) \
	menus/grep_menu.$(OBJEXT) menus/history_menu.$(OBJEXT) \
	menus/jobs_menu.$(OBJEXT) menus/locate_menu.$(OBJEXT) \
	menus/trash_menu.$(OBJEXT) menus/trashes_menu.$(OBJEXT) \
	menus/map_menu.$(OBJEXT) menus/marks_menu.$(OBJEXT) \
	menus/menus.$(OBJEXT) menus/registers_menu.$(OBJEXT) \
	menus/undolist_menu.$(OBJEXT) menus/users_menu.$(OBJEXT) \
	menus/vifm_menu.$(OBJEXT) \
	modes/dialogs/attr_dialog_nix.$(OBJEXT) \
	modes/dialogs/change_dialog.$(OBJEXT) \
	modes/dialogs/msg_dialog.$(OBJEXT) \
	modes/dialogs/sort_dialog.$(OBJEXT) modes/cmdline.$(OBJEXT) \
	modes/file_info.$(OBJEXT) modes/menu.$(OBJEXT) \
	modes/modes.$(OBJEXT) modes/more.$(OBJEXT) \
	modes/normal.$(OBJEXT) modes/view.$(OBJEXT) \
	modes/visual.$(OBJEXT) ui/cancellation.$(OBJEXT) \
	ui/color_manager.$(OBJEXT) ui/color_scheme.$(OBJEXT) \
	ui/column_view.$(OBJEXT) ui/escape.$(OBJEXT) \
	ui/fileview.$(OBJEXT) ui/quickview.$(OBJEXT) \
	ui/statusbar.$(OBJEXT) ui/statusline.$(OBJEXT) \
	ui/tabs.$(OBJEXT) ui/ui.$(OBJEXT) utils/cancellation.$(OBJEXT) \
	utils/dynarray.$(OBJEXT) utils/env.$(OBJEXT) \
	utils/file_streams.$(OBJEXT) utils/filemon.$(OBJEXT) \
	utils/filter.$(OBJEXT) utils/fs.$(OBJEXT) \
	utils/fsdata.$(OBJEXT) utils/fsddata.$(OBJEXT) \
	utils/fswatch_nix.$(OBJEXT) utils/globs.$(OBJEXT) \
	utils/hist.$(OBJEXT) utils/int_stack.$(OBJEXT) \
	utils/log.$(OBJEXT) utils/matcher.$(OBJEXT) \
	utils/matchers.$(OBJEXT) utils/path.$(OBJEXT) \
	utils/regexp.$(OBJEXT) utils/str.$(OBJEXT) \
	utils/string_array.$(OBJEXT) utils/trie.$(OBJEXT) \
	utils/utf8.$(OBJEXT) utils/utils.$(OBJEXT) \
	utils/utils_nix.$(OBJEXT) args.$(OBJEXT) background.$(OBJEXT) \
	bmarks.$(OBJEXT) bracket_notation.$(OBJEXT) \
	builtin_functions.$(OBJEXT) cmd_completion.$(OBJEXT) \
	cmd_core.$(OBJEXT) cmd_handlers.$(OBJEXT) compare.$(OBJEXT) \
	dir_stack.$(OBJEXT) event_loop.$(OBJEXT) filelist.$(OBJEXT) \
	filename_modifiers.$(OBJEXT) fops_common.$(OBJEXT) \
	fops_cpmv.$(OBJEXT) fops_misc.$(OBJEXT) fops_put.$(OBJEXT) \
	fops_rename.$(OBJEXT) filetype.$(OBJEXT) filtering.$(OBJEXT) \
	flist_hist.$(OBJEXT) flist_pos.$(OBJEXT) flist_sel.$(OBJEXT) \
	ipc.$(OBJEXT) macros.$(OBJEXT) marks.$(OBJEXT) ops.$(OBJEXT) \
	opt_handlers.$(OBJEXT) registers.$(OBJEXT) running.$(OBJEXT) \
	search.$(OBJEXT) signals.$(OBJEXT) sort.$(OBJEXT) \
	status.$(OBJEXT) tags.$(OBJEXT) trash.$(OBJEXT) \
	types.$(OBJEXT) undo.$(OBJEXT) version.$(OBJEXT) \
	viewcolumns_parser.$(OBJEXT) vifm.$(OBJEXT)
nodist_vifm_OBJECTS = compile_info.$(OBJEXT)
vifm_OBJECTS = $(am_vifm_OBJECTS) $(nodist_vifm_OBJECTS)
vifm_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/build-aux
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(vifm_SOURCES) $(nodist_vifm_SOURCES)
DIST_SOURCES = $(vifm_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man_MANS)
DATA = $(dist_bashcompl_DATA) $(dist_desktopapp_DATA) \
	$(dist_desktoppix_DATA) $(dist_docs_DATA) $(dist_pkgdata_DATA) \
	$(dist_vim_autoload_vifm__DATA) $(dist_vim_colors__DATA) \
	$(dist_vim_doc__DATA) $(dist_vim_ftdetect__DATA) \
	$(dist_vim_ftplugin__DATA) $(dist_vim_plugin__DATA) \
	$(dist_vim_syntax__DATA) $(dist_vimdoc_doc__DATA) \
	$(dist_zshcompl_DATA) $(nodist_pkgdata_DATA) \
	$(nodist_vim_doc__DATA) $(nodist_vimdoc_doc__DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/mkinstalldirs \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK_PROG@
AWK_PROG = @AWK_PROG@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COL_PROG = @COL_PROG@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GIT_PROG = @GIT_PROG@
GREP = @GREP@
HAVE_FILE_PROG = @HAVE_FILE_PROG@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IN_GIT_REPO = @IN_GIT_REPO@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANGEN_PROG = @MANGEN_PROG@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL_PROG = @PERL_PROG@
SANITIZERS_CFLAGS = @SANITIZERS_CFLAGS@
SED_PROG = @SED_PROG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TESTS_CFLAGS = @TESTS_CFLAGS@
VERSION = @VERSION@
VIM_PROG = @VIM_PROG@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
vim_dir = $(pkgdatadir)/vim
vim_colors_dir = $(pkgdatadir)/colors
vimdoc_dir = $(pkgdatadir)/vim-doc
vim_autoload_vifm_dir = $(vim_dir)/autoload/vifm
vim_doc_dir = $(vim_dir)/doc
vim_ftdetect_dir = $(vim_dir)/ftdetect
vim_ftplugin_dir = $(vim_dir)/ftplugin
vim_plugin_dir = $(vim_dir)/plugin
vim_syntax_dir = $(vim_dir)/syntax
vimdoc_doc_dir = $(vimdoc_dir)/doc
dist_vim_autoload_vifm__DATA = ../data/vim/autoload/vifm/edit.vim
dist_vim_colors__DATA = ../data/colors/astrell-root.vifm \
									 ../data/colors/astrell-user.vifm \
									 ../data/colors/dmilith-root.vifm \
									 ../data/colors/dmilith-user.vifm \
									 ../data/colors/istib-solarized-dark.vifm \
									 ../data/colors/juef-zenburn.vifm \
									 ../data/colors/reicheltd-light.vifm

dist_vim_doc__DATA = ../data/vim/doc/plugin/vifm-plugin.txt
nodist_vim_doc__DATA = $(abs_srcdir)/../data/vim/doc/plugin/tags
dist_vim_ftdetect__DATA = ../data/vim/ftdetect/vifm.vim \
										 ../data/vim/ftdetect/vifm-rename.vim

dist_vim_ftplugin__DATA = ../data/vim/ftplugin/vifm.vim \
										 ../data/vim/ftplugin/vifm-cmdedit.vim \
										 ../data/vim/ftplugin/vifm-edit.vim \
										 ../data/vim/ftplugin/vifm-rename.vim \
										 ../data/vim/ftplugin/mail_vifm.vim

dist_vim_plugin__DATA = ../data/vim/plugin/vifm.vim
dist_vim_syntax__DATA = ../data/vim/syntax/vifm.vim
dist_vimdoc_doc__DATA = ../data/vim/doc/app/vifm-app.txt
nodist_vimdoc_doc__DATA = $(abs_srcdir)/../data/vim/doc/app/tags
dist_pkgdata_DATA = ../data/vifmrc \
							 ../data/vifmrc-osx

nodist_pkgdata_DATA = ../data/vifm-help.txt
dist_bin_SCRIPTS = vifm-pause vifm-screen-split vifm-convert-dircolors
dist_man_MANS = ../data/man/vifm.1 \
					 ../data/man/vifm-pause.1 \
					 ../data/man/vifm-screen-split.1 \
					 ../data/man/vifm-convert-dircolors.1

MOSTLYCLEANFILES = compile_info.c \
									 ../data/vifm-help.txt \
									 $(abs_srcdir)/../data/vim/doc/app/tags \
									 $(abs_srcdir)/../data/vim/doc/plugin/tags

desktopappdir = $(datadir)/applications
desktopappfile = ../data/vifm.desktop
dist_desktopapp_DATA = $(desktopappfile)
desktoppixdir = $(datadir)/pixmaps
desktoppixfile = ../data/graphics/vifm.png
dist_desktoppix_DATA = $(desktoppixfile)
bashcompldir = $(datadir)/bash-completion/completions
bashcomplfile = ../data/shell-completion/bash/vifm
dist_bashcompl_DATA = $(bashcomplfile)
zshcompldir = $(datadir)/zsh/site-functions
zshcomplfile = ../data/shell-completion/zsh/_vifm
dist_zshcompl_DATA = $(zshcomplfile)
docsfile = ../AUTHORS ../BUGS ../COPYING ../ChangeLog ../FAQ ../INSTALL \
					 ../NEWS ../README ../TODO

docsdir = $(docdir)
dist_docs_DATA = $(docsfile)
vifm_SOURCES = \
	\
	cfg/config.c cfg/config.h \
	cfg/info.c cfg/info.h \
	cfg/info_chars.h \
	\
	compat/curses.c compat/curses.h \
	compat/dtype.c compat/dtype.h \
	compat/fs_limits.h \
	compat/getopt.c compat/getopt1.c compat/getopt.h compat/getopt_int.h \
	compat/mntent.c compat/mntent.h \
	compat/os.c compat/os.h \
	compat/pthread.c compat/pthread.h \
	compat/reallocarray.c compat/reallocarray.h \
	\
	engine/abbrevs.c engine/abbrevs.h \
	engine/autocmds.c engine/autocmds.h \
	engine/cmds.c engine/cmds.h \
	engine/completion.c engine/completion.h \
	engine/functions.c engine/functions.h \
	engine/keys.c engine/keys.h \
	engine/mode.c engine/mode.h \
	engine/options.c engine/options.h engine/private/options.h \
	engine/parsing.c engine/parsing.h \
	engine/text_buffer.c engine/text_buffer.h \
	engine/var.c engine/var.h \
	engine/variables.c engine/variables.h \
	\
	int/desktop.c int/desktop.h \
	int/file_magic.c int/file_magic.h \
	int/fuse.c int/fuse.h \
	int/path_env.c int/path_env.h \
	int/term_title.c int/term_title.h \
	int/vim.c int/vim.h \
	\
	io/ioc.h \
	io/ioe.h \
	io/ioe.c io/ioe.h \
	io/ioeta.c io/ioeta.h \
	io/ionotif.h \
	io/iop.c io/iop.h \
	io/ior.c io/ior.h \
	io/private/ioc.c io/private/ioc.h \
	io/private/ioe.c io/private/ioe.h \
	io/private/ioeta.c io/private/ioeta.h \
	io/private/ionotif.c io/private/ionotif.h \
	io/private/traverser.c io/private/traverser.h \
	\
	menus/all.h \
	menus/apropos_menu.c menus/apropos_menu.h \
	menus/bmarks_menu.c menus/bmarks_menu.h \
	menus/cabbrevs_menu.c menus/cabbrevs_menu.h \
	menus/colorscheme_menu.c menus/colorscheme_menu.h \
	menus/commands_menu.c menus/commands_menu.h \
	menus/dirhistory_menu.c menus/dirhistory_menu.h \
	menus/dirstack_menu.c menus/dirstack_menu.h \
	menus/filetypes_menu.c menus/filetypes_menu.h \
	menus/find_menu.c menus/find_menu.h \
	menus/grep_menu.c menus/grep_menu.h \
	menus/history_menu.c menus/history_menu.h \
	menus/jobs_menu.c menus/jobs_menu.h \
	menus/locate_menu.c menus/locate_menu.h \
	menus/trash_menu.c menus/trash_menu.h \
	menus/trashes_menu.c menus/trashes_menu.h \
	menus/map_menu.c menus/map_menu.h \
	menus/marks_menu.c menus/marks_menu.h \
	menus/menus.c menus/menus.h \
	menus/registers_menu.c menus/registers_menu.h \
	menus/undolist_menu.c menus/undolist_menu.h \
	menus/users_menu.c menus/users_menu.h \
	menus/vifm_menu.c menus/vifm_menu.h \
	menus/volumes_menu.h \
	\
	modes/dialogs/attr_dialog.h \
	modes/dialogs/attr_dialog_nix.c modes/dialogs/attr_dialog_nix.h \
	modes/dialogs/change_dialog.c modes/dialogs/change_dialog.h \
	modes/dialogs/msg_dialog.c modes/dialogs/msg_dialog.h \
	modes/dialogs/sort_dialog.c modes/dialogs/sort_dialog.h \
	\
	modes/cmdline.c modes/cmdline.h \
	modes/file_info.c modes/file_info.h \
	modes/menu.c modes/menu.h \
	modes/modes.c modes/modes.h \
	modes/more.c modes/more.h \
	modes/normal.c modes/normal.h \
	modes/view.c modes/view.h \
	modes/visual.c modes/visual.h \
	modes/wk.h \
	\
	ui/cancellation.c ui/cancellation.h \
	ui/color_manager.c ui/color_manager.h \
	ui/color_scheme.c ui/color_scheme.h \
	ui/colors.h \
	ui/column_view.c ui/column_view.h \
	ui/escape.c ui/escape.h \
	ui/fileview.c ui/fileview.h \
	ui/private/statusline.h \
	ui/quickview.c ui/quickview.h \
	ui/statusbar.c ui/statusbar.h \
	ui/statusline.c ui/statusline.h \
	ui/tabs.c ui/tabs.h \
	ui/ui.c ui/ui.h \
	\
	utils/cancellation.c utils/cancellation.h \
	utils/darray.h \
	utils/dynarray.c utils/dynarray.h \
	utils/env.c utils/env.h \
	utils/file_streams.c utils/file_streams.h \
	utils/filemon.c utils/filemon.h \
	utils/filter.c utils/filter.h \
	utils/fs.c utils/fs.h \
	utils/fsdata.c utils/fsdata.h utils/private/fsdata.h \
	utils/fsddata.c utils/fsddata.h \
	utils/fswatch_nix.c utils/fswatch.h \
	utils/globs.c utils/globs.h \
	utils/hist.c utils/hist.h \
	utils/int_stack.c utils/int_stack.h \
	utils/log.c utils/log.h \
	utils/macros.h \
	utils/matcher.c utils/matcher.h \
	utils/matchers.c utils/matchers.h \
	utils/path.c utils/path.h \
	utils/regexp.c utils/regexp.h \
	utils/str.c utils/str.h \
	utils/string_array.c utils/string_array.h \
	utils/test_helpers.h \
	utils/trie.c utils/trie.h \
	utils/utf8.c utils/utf8.h \
	utils/utils.c utils/utils.h \
	utils/utils_int.h \
	utils/utils_nix.c utils/utils_nix.h \
	utils/xxhash.h \
	\
	args.c args.h \
	background.c background.h \
	bmarks.c bmarks.h \
	bracket_notation.c bracket_notation.h \
	builtin_functions.c builtin_functions.h \
	cmd_completion.c cmd_completion.h \
	cmd_core.c cmd_core.h \
	cmd_handlers.c cmd_handlers.h \
	compare.c compare.h \
	dir_stack.c dir_stack.h \
	event_loop.c event_loop.h \
	filelist.c filelist.h \
	filename_modifiers.c filename_modifiers.h \
	fops_common.c fops_common.h \
	fops_cpmv.c fops_cpmv.h \
	fops_misc.c fops_misc.h \
	fops_put.c fops_put.h \
	fops_rename.c fops_rename.h \
	filetype.c filetype.h \
	filtering.c filtering.h \
	flist_hist.c flist_hist.h \
	flist_pos.c flist_pos.h \
	flist_sel.c flist_sel.h \
	ipc.c ipc.h \
	macros.c macros.h \
	marks.c marks.h \
	ops.c ops.h \
	opt_handlers.c opt_handlers.h \
	registers.c registers.h \
	running.c running.h \
	search.c search.h \
	signals.c signals.h \
	sort.c sort.h \
	status.c status.h \
	tags.c tags.h \
	trash.c trash.h \
	types.c types.h \
	undo.c undo.h \
	version.c version.h \
	viewcolumns_parser.c viewcolumns_parser.h \
	vifm.c vifm.h

nodist_vifm_SOURCES = \
	compile_info.c

check_SCRIPTS = runtests
TESTS = $(check_SCRIPTS)
EXTRA_DIST = \
						 update-compile-info \
						 helpztags \
						 menus/volumes_menu.c \
						 vifm.rc \
						 win_helper.c \
						 utils/fswatch_win.c \
						 utils/utils_win.c \
						 utils/utils_win.h \
						 utils/windefs.h \
						 utils/xxhash.c \
						 modes/dialogs/attr_dialog_win.h \
						 modes/dialogs/attr_dialog_win.c \
						 compat/wcwidth.c \
						 compat/wcwidth.h \
						 Makefile.win \
						 lcov.css \
						 lcovrc \
						 ../data/graphics/vifm.ico \
						 ../data/graphics/vifm.svg

MANGEN = @MANGEN_PROG@
COL = @COL_PROG@
PERL = @PERL_PROG@
SED = @SED_PROG@
VIM = @VIM_PROG@
UNDER_VCS = @IN_GIT_REPO@
CLEANFILES = runtests lcov-all.info lcov.info $(vifm_OBJECTS:.o=.gcno) \
                                              $(vifm_OBJECTS:.o=.gcda)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
cfg/$(am__dirstamp):
	@$(MKDIR_P) cfg
	@: > cfg/$(am__dirstamp)
cfg/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cfg/$(DEPDIR)
	@: > cfg/$(DEPDIR)/$(am__dirstamp)
cfg/config.$(OBJEXT): cfg/$(am__dirstamp) \
	cfg/$(DEPDIR)/$(am__dirstamp)
cfg/info.$(OBJEXT): cfg/$(am__dirstamp) cfg/$(DEPDIR)/$(am__dirstamp)
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/curses.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/dtype.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/getopt.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/getopt1.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/mntent.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/os.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/pthread.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/reallocarray.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
engine/$(am__dirstamp):
	@$(MKDIR_P) engine
	@: > engine/$(am__dirstamp)
engine/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) engine/$(DEPDIR)
	@: > engine/$(DEPDIR)/$(am__dirstamp)
engine/abbrevs.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/autocmds.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/cmds.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/completion.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/functions.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/keys.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/mode.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/options.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/parsing.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/text_buffer.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/var.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
engine/variables.$(OBJEXT): engine/$(am__dirstamp) \
	engine/$(DEPDIR)/$(am__dirstamp)
int/$(am__dirstamp):
	@$(MKDIR_P) int
	@: > int/$(am__dirstamp)
int/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) int/$(DEPDIR)
	@: > int/$(DEPDIR)/$(am__dirstamp)
int/desktop.$(OBJEXT): int/$(am__dirstamp) \
	int/$(DEPDIR)/$(am__dirstamp)
int/file_magic.$(OBJEXT): int/$(am__dirstamp) \
	int/$(DEPDIR)/$(am__dirstamp)
int/fuse.$(OBJEXT): int/$(am__dirstamp) int/$(DEPDIR)/$(am__dirstamp)
int/path_env.$(OBJEXT): int/$(am__dirstamp) \
	int/$(DEPDIR)/$(am__dirstamp)
int/term_title.$(OBJEXT): int/$(am__dirstamp) \
	int/$(DEPDIR)/$(am__dirstamp)
int/vim.$(OBJEXT): int/$(am__dirstamp) int/$(DEPDIR)/$(am__dirstamp)
io/$(am__dirstamp):
	@$(MKDIR_P) io
	@: > io/$(am__dirstamp)
io/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) io/$(DEPDIR)
	@: > io/$(DEPDIR)/$(am__dirstamp)
io/ioe.$(OBJEXT): io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/ioeta.$(OBJEXT): io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/iop.$(OBJEXT): io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/ior.$(OBJEXT): io/$(am__dirstamp) io/$(DEPDIR)/$(am__dirstamp)
io/private/$(am__dirstamp):
	@$(MKDIR_P) io/private
	@: > io/private/$(am__dirstamp)
io/private/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) io/private/$(DEPDIR)
	@: > io/private/$(DEPDIR)/$(am__dirstamp)
io/private/ioc.$(OBJEXT): io/private/$(am__dirstamp) \
	io/private/$(DEPDIR)/$(am__dirstamp)
io/private/ioe.$(OBJEXT): io/private/$(am__dirstamp) \
	io/private/$(DEPDIR)/$(am__dirstamp)
io/private/ioeta.$(OBJEXT): io/private/$(am__dirstamp) \
	io/private/$(DEPDIR)/$(am__dirstamp)
io/private/ionotif.$(OBJEXT): io/private/$(am__dirstamp) \
	io/private/$(DEPDIR)/$(am__dirstamp)
io/private/traverser.$(OBJEXT): io/private/$(am__dirstamp) \
	io/private/$(DEPDIR)/$(am__dirstamp)
menus/$(am__dirstamp):
	@$(MKDIR_P) menus
	@: > menus/$(am__dirstamp)
menus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) menus/$(DEPDIR)
	@: > menus/$(DEPDIR)/$(am__dirstamp)
menus/apropos_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/bmarks_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/cabbrevs_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/colorscheme_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/commands_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/dirhistory_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/dirstack_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/filetypes_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/find_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/grep_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/history_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/jobs_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/locate_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/trash_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/trashes_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/map_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/marks_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/menus.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/registers_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/undolist_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/users_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
menus/vifm_menu.$(OBJEXT): menus/$(am__dirstamp) \
	menus/$(DEPDIR)/$(am__dirstamp)
modes/dialogs/$(am__dirstamp):
	@$(MKDIR_P) modes/dialogs
	@: > modes/dialogs/$(am__dirstamp)
modes/dialogs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) modes/dialogs/$(DEPDIR)
	@: > modes/dialogs/$(DEPDIR)/$(am__dirstamp)
modes/dialogs/attr_dialog_nix.$(OBJEXT):  \
	modes/dialogs/$(am__dirstamp) \
	modes/dialogs/$(DEPDIR)/$(am__dirstamp)
modes/dialogs/change_dialog.$(OBJEXT): modes/dialogs/$(am__dirstamp) \
	modes/dialogs/$(DEPDIR)/$(am__dirstamp)
modes/dialogs/msg_dialog.$(OBJEXT): modes/dialogs/$(am__dirstamp) \
	modes/dialogs/$(DEPDIR)/$(am__dirstamp)
modes/dialogs/sort_dialog.$(OBJEXT): modes/dialogs/$(am__dirstamp) \
	modes/dialogs/$(DEPDIR)/$(am__dirstamp)
modes/$(am__dirstamp):
	@$(MKDIR_P) modes
	@: > modes/$(am__dirstamp)
modes/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) modes/$(DEPDIR)
	@: > modes/$(DEPDIR)/$(am__dirstamp)
modes/cmdline.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/file_info.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/menu.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/modes.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/more.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/normal.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/view.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
modes/visual.$(OBJEXT): modes/$(am__dirstamp) \
	modes/$(DEPDIR)/$(am__dirstamp)
ui/$(am__dirstamp):
	@$(MKDIR_P) ui
	@: > ui/$(am__dirstamp)
ui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ui/$(DEPDIR)
	@: > ui/$(DEPDIR)/$(am__dirstamp)
ui/cancellation.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/color_manager.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/color_scheme.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/column_view.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/escape.$(OBJEXT): ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/fileview.$(OBJEXT): ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/quickview.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/statusbar.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/statusline.$(OBJEXT): ui/$(am__dirstamp) \
	ui/$(DEPDIR)/$(am__dirstamp)
ui/tabs.$(OBJEXT): ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
ui/ui.$(OBJEXT): ui/$(am__dirstamp) ui/$(DEPDIR)/$(am__dirstamp)
utils/$(am__dirstamp):
	@$(MKDIR_P) utils
	@: > utils/$(am__dirstamp)
utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) utils/$(DEPDIR)
	@: > utils/$(DEPDIR)/$(am__dirstamp)
utils/cancellation.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/dynarray.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/env.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/file_streams.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/filemon.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/filter.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/fs.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/fsdata.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/fsddata.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/fswatch_nix.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/globs.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/hist.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/int_stack.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/log.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/matcher.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/matchers.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/path.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/regexp.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/str.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/string_array.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/trie.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/utf8.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/utils.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)
utils/utils_nix.$(OBJEXT): utils/$(am__dirstamp) \
	utils/$(DEPDIR)/$(am__dirstamp)

vifm$(EXEEXT): $(vifm_OBJECTS) $(vifm_DEPENDENCIES) $(EXTRA_vifm_DEPENDENCIES) 
	@rm -f vifm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vifm_OBJECTS) $(vifm_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f cfg/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f engine/*.$(OBJEXT)
	-rm -f int/*.$(OBJEXT)
	-rm -f io/*.$(OBJEXT)
	-rm -f io/private/*.$(OBJEXT)
	-rm -f menus/*.$(OBJEXT)
	-rm -f modes/*.$(OBJEXT)
	-rm -f modes/dialogs/*.$(OBJEXT)
	-rm -f ui/*.$(OBJEXT)
	-rm -f utils/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/args.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/background.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bmarks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bracket_notation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/builtin_functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmd_completion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmd_core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmd_handlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compare.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compile_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dir_stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/event_loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filelist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filename_modifiers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filetype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filtering.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flist_hist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flist_pos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flist_sel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fops_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fops_cpmv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fops_misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fops_put.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fops_rename.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/macros.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/marks.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opt_handlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/registers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/running.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/search.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sort.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/status.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/undo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/viewcolumns_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vifm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cfg/$(DEPDIR)/config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@cfg/$(DEPDIR)/info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/curses.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/dtype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/getopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/getopt1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/mntent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/os.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/pthread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@compat/$(DEPDIR)/reallocarray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/abbrevs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/autocmds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/cmds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/completion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/functions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/keys.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/parsing.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/text_buffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/var.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@engine/$(DEPDIR)/variables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/desktop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/file_magic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/fuse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/path_env.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/term_title.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@int/$(DEPDIR)/vim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/ioe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/ioeta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/iop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/$(DEPDIR)/ior.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/private/$(DEPDIR)/ioc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/private/$(DEPDIR)/ioe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/private/$(DEPDIR)/ioeta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/private/$(DEPDIR)/ionotif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@io/private/$(DEPDIR)/traverser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/apropos_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/bmarks_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/cabbrevs_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/colorscheme_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/commands_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/dirhistory_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/dirstack_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/filetypes_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/find_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/grep_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/history_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/jobs_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/locate_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/map_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/marks_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/menus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/registers_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/trash_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/trashes_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/undolist_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/users_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@menus/$(DEPDIR)/vifm_menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/cmdline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/file_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/modes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/more.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/normal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/view.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/$(DEPDIR)/visual.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/dialogs/$(DEPDIR)/attr_dialog_nix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/dialogs/$(DEPDIR)/change_dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/dialogs/$(DEPDIR)/msg_dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@modes/dialogs/$(DEPDIR)/sort_dialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/cancellation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/color_manager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/color_scheme.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/column_view.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/escape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/fileview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/quickview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/statusbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/statusline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/tabs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@ui/$(DEPDIR)/ui.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/cancellation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/dynarray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/env.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/file_streams.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/filemon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/fs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/fsdata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/fsddata.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/fswatch_nix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/globs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/hist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/int_stack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/matcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/matchers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/path.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/regexp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/string_array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@utils/$(DEPDIR)/utils_nix.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-dist_bashcomplDATA: $(dist_bashcompl_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_bashcompl_DATA)'; test -n "$(bashcompldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bashcompldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bashcompldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(bashcompldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(bashcompldir)" || exit $$?; \
	done

uninstall-dist_bashcomplDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bashcompl_DATA)'; test -n "$(bashcompldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(bashcompldir)'; $(am__uninstall_files_from_dir)
install-dist_desktopappDATA: $(dist_desktopapp_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_desktopapp_DATA)'; test -n "$(desktopappdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(desktopappdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(desktopappdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktopappdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktopappdir)" || exit $$?; \
	done

uninstall-dist_desktopappDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_desktopapp_DATA)'; test -n "$(desktopappdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(desktopappdir)'; $(am__uninstall_files_from_dir)
install-dist_desktoppixDATA: $(dist_desktoppix_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_desktoppix_DATA)'; test -n "$(desktoppixdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(desktoppixdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(desktoppixdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktoppixdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktoppixdir)" || exit $$?; \
	done

uninstall-dist_desktoppixDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_desktoppix_DATA)'; test -n "$(desktoppixdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(desktoppixdir)'; $(am__uninstall_files_from_dir)
install-dist_docsDATA: $(dist_docs_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_docs_DATA)'; test -n "$(docsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docsdir)" || exit $$?; \
	done

uninstall-dist_docsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_docs_DATA)'; test -n "$(docsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docsdir)'; $(am__uninstall_files_from_dir)
install-dist_pkgdataDATA: $(dist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-dist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-dist_vim_autoload_vifm_DATA: $(dist_vim_autoload_vifm__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_autoload_vifm__DATA)'; test -n "$(vim_autoload_vifm_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_autoload_vifm_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_autoload_vifm_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_autoload_vifm_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_autoload_vifm_dir)" || exit $$?; \
	done

uninstall-dist_vim_autoload_vifm_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_autoload_vifm__DATA)'; test -n "$(vim_autoload_vifm_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_autoload_vifm_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_colors_DATA: $(dist_vim_colors__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_colors__DATA)'; test -n "$(vim_colors_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_colors_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_colors_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_colors_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_colors_dir)" || exit $$?; \
	done

uninstall-dist_vim_colors_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_colors__DATA)'; test -n "$(vim_colors_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_colors_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_doc_DATA: $(dist_vim_doc__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_doc__DATA)'; test -n "$(vim_doc_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_doc_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_doc_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_doc_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_doc_dir)" || exit $$?; \
	done

uninstall-dist_vim_doc_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_doc__DATA)'; test -n "$(vim_doc_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_doc_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_ftdetect_DATA: $(dist_vim_ftdetect__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_ftdetect__DATA)'; test -n "$(vim_ftdetect_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_ftdetect_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_ftdetect_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_ftdetect_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_ftdetect_dir)" || exit $$?; \
	done

uninstall-dist_vim_ftdetect_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_ftdetect__DATA)'; test -n "$(vim_ftdetect_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_ftdetect_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_ftplugin_DATA: $(dist_vim_ftplugin__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_ftplugin__DATA)'; test -n "$(vim_ftplugin_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_ftplugin_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_ftplugin_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_ftplugin_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_ftplugin_dir)" || exit $$?; \
	done

uninstall-dist_vim_ftplugin_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_ftplugin__DATA)'; test -n "$(vim_ftplugin_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_ftplugin_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_plugin_DATA: $(dist_vim_plugin__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_plugin__DATA)'; test -n "$(vim_plugin_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_plugin_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_plugin_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_plugin_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_plugin_dir)" || exit $$?; \
	done

uninstall-dist_vim_plugin_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_plugin__DATA)'; test -n "$(vim_plugin_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_plugin_dir)'; $(am__uninstall_files_from_dir)
install-dist_vim_syntax_DATA: $(dist_vim_syntax__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vim_syntax__DATA)'; test -n "$(vim_syntax_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_syntax_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_syntax_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_syntax_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_syntax_dir)" || exit $$?; \
	done

uninstall-dist_vim_syntax_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vim_syntax__DATA)'; test -n "$(vim_syntax_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_syntax_dir)'; $(am__uninstall_files_from_dir)
install-dist_vimdoc_doc_DATA: $(dist_vimdoc_doc__DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vimdoc_doc__DATA)'; test -n "$(vimdoc_doc_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vimdoc_doc_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vimdoc_doc_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vimdoc_doc_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vimdoc_doc_dir)" || exit $$?; \
	done

uninstall-dist_vimdoc_doc_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vimdoc_doc__DATA)'; test -n "$(vimdoc_doc_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vimdoc_doc_dir)'; $(am__uninstall_files_from_dir)
install-dist_zshcomplDATA: $(dist_zshcompl_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_zshcompl_DATA)'; test -n "$(zshcompldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(zshcompldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(zshcompldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(zshcompldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(zshcompldir)" || exit $$?; \
	done

uninstall-dist_zshcomplDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_zshcompl_DATA)'; test -n "$(zshcompldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(zshcompldir)'; $(am__uninstall_files_from_dir)
install-nodist_pkgdataDATA: $(nodist_pkgdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgdatadir)" || exit $$?; \
	done

uninstall-nodist_pkgdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgdata_DATA)'; test -n "$(pkgdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgdatadir)'; $(am__uninstall_files_from_dir)
install-nodist_vim_doc_DATA: $(nodist_vim_doc__DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_vim_doc__DATA)'; test -n "$(vim_doc_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vim_doc_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vim_doc_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vim_doc_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vim_doc_dir)" || exit $$?; \
	done

uninstall-nodist_vim_doc_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_vim_doc__DATA)'; test -n "$(vim_doc_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vim_doc_dir)'; $(am__uninstall_files_from_dir)
install-nodist_vimdoc_doc_DATA: $(nodist_vimdoc_doc__DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_vimdoc_doc__DATA)'; test -n "$(vimdoc_doc_dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vimdoc_doc_dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vimdoc_doc_dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vimdoc_doc_dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vimdoc_doc_dir)" || exit $$?; \
	done

uninstall-nodist_vimdoc_doc_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_vimdoc_doc__DATA)'; test -n "$(vimdoc_doc_dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vimdoc_doc_dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
runtests.log: runtests
	@p='runtests'; \
	b='runtests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(bashcompldir)" "$(DESTDIR)$(desktopappdir)" "$(DESTDIR)$(desktoppixdir)" "$(DESTDIR)$(docsdir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(vim_autoload_vifm_dir)" "$(DESTDIR)$(vim_colors_dir)" "$(DESTDIR)$(vim_doc_dir)" "$(DESTDIR)$(vim_ftdetect_dir)" "$(DESTDIR)$(vim_ftplugin_dir)" "$(DESTDIR)$(vim_plugin_dir)" "$(DESTDIR)$(vim_syntax_dir)" "$(DESTDIR)$(vimdoc_doc_dir)" "$(DESTDIR)$(zshcompldir)" "$(DESTDIR)$(pkgdatadir)" "$(DESTDIR)$(vim_doc_dir)" "$(DESTDIR)$(vimdoc_doc_dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f cfg/$(DEPDIR)/$(am__dirstamp)
	-rm -f cfg/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f engine/$(DEPDIR)/$(am__dirstamp)
	-rm -f engine/$(am__dirstamp)
	-rm -f int/$(DEPDIR)/$(am__dirstamp)
	-rm -f int/$(am__dirstamp)
	-rm -f io/$(DEPDIR)/$(am__dirstamp)
	-rm -f io/$(am__dirstamp)
	-rm -f io/private/$(DEPDIR)/$(am__dirstamp)
	-rm -f io/private/$(am__dirstamp)
	-rm -f menus/$(DEPDIR)/$(am__dirstamp)
	-rm -f menus/$(am__dirstamp)
	-rm -f modes/$(DEPDIR)/$(am__dirstamp)
	-rm -f modes/$(am__dirstamp)
	-rm -f modes/dialogs/$(DEPDIR)/$(am__dirstamp)
	-rm -f modes/dialogs/$(am__dirstamp)
	-rm -f ui/$(DEPDIR)/$(am__dirstamp)
	-rm -f ui/$(am__dirstamp)
	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f utils/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) cfg/$(DEPDIR) compat/$(DEPDIR) engine/$(DEPDIR) int/$(DEPDIR) io/$(DEPDIR) io/private/$(DEPDIR) menus/$(DEPDIR) modes/$(DEPDIR) modes/dialogs/$(DEPDIR) ui/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_bashcomplDATA \
	install-dist_desktopappDATA install-dist_desktoppixDATA \
	install-dist_docsDATA install-dist_pkgdataDATA \
	install-dist_vim_autoload_vifm_DATA \
	install-dist_vim_colors_DATA install-dist_vim_doc_DATA \
	install-dist_vim_ftdetect_DATA install-dist_vim_ftplugin_DATA \
	install-dist_vim_plugin_DATA install-dist_vim_syntax_DATA \
	install-dist_vimdoc_doc_DATA install-dist_zshcomplDATA \
	install-man install-nodist_pkgdataDATA \
	install-nodist_vim_doc_DATA install-nodist_vimdoc_doc_DATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) cfg/$(DEPDIR) compat/$(DEPDIR) engine/$(DEPDIR) int/$(DEPDIR) io/$(DEPDIR) io/private/$(DEPDIR) menus/$(DEPDIR) modes/$(DEPDIR) modes/dialogs/$(DEPDIR) ui/$(DEPDIR) utils/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_bashcomplDATA \
	uninstall-dist_binSCRIPTS uninstall-dist_desktopappDATA \
	uninstall-dist_desktoppixDATA uninstall-dist_docsDATA \
	uninstall-dist_pkgdataDATA \
	uninstall-dist_vim_autoload_vifm_DATA \
	uninstall-dist_vim_colors_DATA uninstall-dist_vim_doc_DATA \
	uninstall-dist_vim_ftdetect_DATA \
	uninstall-dist_vim_ftplugin_DATA \
	uninstall-dist_vim_plugin_DATA uninstall-dist_vim_syntax_DATA \
	uninstall-dist_vimdoc_doc_DATA uninstall-dist_zshcomplDATA \
	uninstall-man uninstall-nodist_pkgdataDATA \
	uninstall-nodist_vim_doc_DATA uninstall-nodist_vimdoc_doc_DATA

uninstall-man: uninstall-man1

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-local cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-local distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_bashcomplDATA \
	install-dist_binSCRIPTS install-dist_desktopappDATA \
	install-dist_desktoppixDATA install-dist_docsDATA \
	install-dist_pkgdataDATA install-dist_vim_autoload_vifm_DATA \
	install-dist_vim_colors_DATA install-dist_vim_doc_DATA \
	install-dist_vim_ftdetect_DATA install-dist_vim_ftplugin_DATA \
	install-dist_vim_plugin_DATA install-dist_vim_syntax_DATA \
	install-dist_vimdoc_doc_DATA install-dist_zshcomplDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-nodist_pkgdataDATA \
	install-nodist_vim_doc_DATA install-nodist_vimdoc_doc_DATA \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-dist_bashcomplDATA \
	uninstall-dist_binSCRIPTS uninstall-dist_desktopappDATA \
	uninstall-dist_desktoppixDATA uninstall-dist_docsDATA \
	uninstall-dist_pkgdataDATA \
	uninstall-dist_vim_autoload_vifm_DATA \
	uninstall-dist_vim_colors_DATA uninstall-dist_vim_doc_DATA \
	uninstall-dist_vim_ftdetect_DATA \
	uninstall-dist_vim_ftplugin_DATA \
	uninstall-dist_vim_plugin_DATA uninstall-dist_vim_syntax_DATA \
	uninstall-dist_vimdoc_doc_DATA uninstall-dist_zshcomplDATA \
	uninstall-man uninstall-man1 uninstall-nodist_pkgdataDATA \
	uninstall-nodist_vim_doc_DATA uninstall-nodist_vimdoc_doc_DATA

.PRECIOUS: Makefile


.PHONY: update_compile_info
clean-local:
	if [ '$(abs_builddir)' != '$(abs_srcdir)' ]; then \
		$(RM) tags.c; \
	fi

runtests:
	echo 'mkdir -p $(abs_builddir)/../tests/' > $@_
	echo \
		'$(MAKE) -C $(abs_srcdir)/../tests B=$(abs_builddir)/../tests/ CC="$(CC)"' \
		>> $@_
	chmod +x $@_
	mv $@_ $@

coverage: check
	lcov --directory $(abs_builddir)/ --base-directory . \
	     --capture --output-file $(abs_builddir)/lcov-all.info --config-file \
	     $(abs_srcdir)/lcovrc --test-name unit_tests --quiet
	lcov --remove $(abs_builddir)/lcov-all.info -o $(abs_builddir)/lcov.info \
	     '/usr/*'
	genhtml --output-directory $(abs_builddir)/cov-report/ \
	     $(abs_builddir)/lcov.info --config-file $(abs_srcdir)/lcovrc \
	     --show-details --css-file $(abs_srcdir)/lcov.css

distclean-local:
	$(MAKE) -C $(abs_srcdir)/../tests B=$(abs_builddir)/../tests/ clean
	$(RM) -r cov-report/

version.o: $(filter-out version.o, $(vifm_OBJECTS))
compile_info.c: update_compile_info
	@$(abs_srcdir)/update-compile-info $(UNDER_VCS)

# No action needed for this target.
update_compile_info:

../data/vifm-help.txt: $(abs_srcdir)/../data/man/vifm.1
	$(AM_V_GEN)mkdir -p ../data/; \
	if [ -n "$(MANGEN)" -a -n "$(SED)" ]; then \
		if [ -n "$(COL)" ]; then \
			$(MANGEN) -Tascii -man $(abs_srcdir)/../data/man/vifm.1 | $(SED) -e 's/\x1b\[[0-9]*m//g' -e 's/\x0d//g' | $(COL) -b >| '$@'; \
		else \
			$(MANGEN) -Tascii -man $(abs_srcdir)/../data/man/vifm.1 | $(SED) -e 's/.\x08//g' -e 's/\x1b\[[0-9]*m//g' -e 's/\x0d//g' >| '$@'; \
		fi \
	fi

$(abs_srcdir)/../data/vim/doc/app/tags: \
                                  $(abs_srcdir)/../data/vim/doc/app/vifm-app.txt
	$(AM_V_GEN)mkdir -p ../data/vim/doc/app/; \
	if [ -n "$(PERL)" ]; then \
		$(abs_srcdir)/helpztags "$(abs_srcdir)/../data/vim/doc/app"; \
	elif [ -n "$(VIM)" ]; then \
		vim -e -s -c 'helptags $(abs_srcdir)/../data/vim/doc/app|q'; \
	else \
		touch $@; \
	fi

$(abs_srcdir)/../data/vim/doc/plugin/tags: \
                            $(abs_srcdir)/../data/vim/doc/plugin/vifm-plugin.txt
	$(AM_V_GEN)mkdir -p ../data/vim/doc/plugin/; \
	if [ -n "$(PERL)" ]; then \
		$(abs_srcdir)/helpztags "$(abs_srcdir)/../data/vim/doc/plugin"; \
	elif [ -n "$(VIM)" ]; then \
		vim -e -s -c 'helptags $(abs_srcdir)/../data/vim/doc/plugin|q'; \
	else \
		touch $@; \
	fi

tags.c: $(abs_srcdir)/../data/vim/doc/app/tags
	$(AM_V_GEN)if [ -s $(abs_srcdir)/../data/vim/doc/app/tags -a -n "$(AWK)" ]; then \
		$(AWK) ' \
			BEGIN { \
				print "const char *tags[] = {" \
			} \
			{ \
				print "\t\"" $$1 "\"," \
			} \
			END { \
				print "\t0,\n};" \
			} \
		' $(abs_srcdir)/../data/vim/doc/app/tags > $@; \
	elif [ '$(abs_builddir)' != '$(abs_srcdir)' ]; then \
		echo 'const char *tags[] = {};' > $@; \
	fi

# vim: set tabstop=2 softtabstop=2 shiftwidth=2 noexpandtab :

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
